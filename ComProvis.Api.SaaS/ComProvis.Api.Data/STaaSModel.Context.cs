//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComProvis.Api.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class STaaSContext : DbContext
    {
        public STaaSContext()
            : base("name=STaaSContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<DiskSpace> DiskSpace { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
    
        public virtual int InsertLogRecord(string source, string level, string message, string referenceId, string data)
        {
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var referenceIdParameter = referenceId != null ?
                new ObjectParameter("referenceId", referenceId) :
                new ObjectParameter("referenceId", typeof(string));
    
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLogRecord", sourceParameter, levelParameter, messageParameter, referenceIdParameter, dataParameter);
        }
    
        public virtual ObjectResult<SpGetCompanyByExternalId> GetCompanyByExternalId(string externalId)
        {
            var externalIdParameter = externalId != null ?
                new ObjectParameter("externalId", externalId) :
                new ObjectParameter("externalId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetCompanyByExternalId>("GetCompanyByExternalId", externalIdParameter);
        }
    
        public virtual ObjectResult<SpGetOrderDemandByGuid> GetOrderDemandByGuid(string orderDemandGuid)
        {
            var orderDemandGuidParameter = orderDemandGuid != null ?
                new ObjectParameter("orderDemandGuid", orderDemandGuid) :
                new ObjectParameter("orderDemandGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetOrderDemandByGuid>("GetOrderDemandByGuid", orderDemandGuidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SaveOrderDemand(Nullable<int> parentDemandId, string guid, Nullable<int> companyId, Nullable<int> provisioningTypeId, Nullable<int> orderDemandStateId, Nullable<int> orderDemandTypeId, string jsondata, string externalTransactionId)
        {
            var parentDemandIdParameter = parentDemandId.HasValue ?
                new ObjectParameter("parentDemandId", parentDemandId) :
                new ObjectParameter("parentDemandId", typeof(int));
    
            var guidParameter = guid != null ?
                new ObjectParameter("guid", guid) :
                new ObjectParameter("guid", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var provisioningTypeIdParameter = provisioningTypeId.HasValue ?
                new ObjectParameter("provisioningTypeId", provisioningTypeId) :
                new ObjectParameter("provisioningTypeId", typeof(int));
    
            var orderDemandStateIdParameter = orderDemandStateId.HasValue ?
                new ObjectParameter("orderDemandStateId", orderDemandStateId) :
                new ObjectParameter("orderDemandStateId", typeof(int));
    
            var orderDemandTypeIdParameter = orderDemandTypeId.HasValue ?
                new ObjectParameter("orderDemandTypeId", orderDemandTypeId) :
                new ObjectParameter("orderDemandTypeId", typeof(int));
    
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            var externalTransactionIdParameter = externalTransactionId != null ?
                new ObjectParameter("externalTransactionId", externalTransactionId) :
                new ObjectParameter("externalTransactionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaveOrderDemand", parentDemandIdParameter, guidParameter, companyIdParameter, provisioningTypeIdParameter, orderDemandStateIdParameter, orderDemandTypeIdParameter, jsondataParameter, externalTransactionIdParameter);
        }
    
        public virtual ObjectResult<SpGetUserByExternalId> GetUserByExternalId(string externalId)
        {
            var externalIdParameter = externalId != null ?
                new ObjectParameter("externalId", externalId) :
                new ObjectParameter("externalId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUserByExternalId>("GetUserByExternalId", externalIdParameter);
        }
    
        public virtual ObjectResult<SpGetCompanyFirstAdminByExternalId> GetCompanyFirstAdminByExternalId(string externalId)
        {
            var externalIdParameter = externalId != null ?
                new ObjectParameter("externalId", externalId) :
                new ObjectParameter("externalId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetCompanyFirstAdminByExternalId>("GetCompanyFirstAdminByExternalId", externalIdParameter);
        }
    
        public virtual ObjectResult<SpGetOrderDemandByExternalTransactionId> GetOrderDemandByExternalTransactionId(string orderDemandGuid)
        {
            var orderDemandGuidParameter = orderDemandGuid != null ?
                new ObjectParameter("orderDemandGuid", orderDemandGuid) :
                new ObjectParameter("orderDemandGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetOrderDemandByExternalTransactionId>("GetOrderDemandByExternalTransactionId", orderDemandGuidParameter);
        }
    }
}
